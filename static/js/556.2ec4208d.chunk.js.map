{"version":3,"file":"static/js/556.2ec4208d.chunk.js","mappings":"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","sources":["pages/auth/Login.tsx"],"sourcesContent":["import { useAuth } from 'auth/AuthProvider';\nimport { useState } from 'react'\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom'\n\ntype RedirectLocationState = {\n    redirectTo: Location;\n};\n\nexport default function Login() {\n    \n    const navigate = useNavigate();\n    const { setToken } = useAuth();\n    const { state: locationState } = useLocation();\n\n    const [user,setUser] = useState({ phone: '', pin: '',remember: false , gender: ''});\n    const onChange = (event: any) => {\n        const { name,value,type,checked } = event.target\n        setUser( (prevFormData) => {\n            return {\n                ...prevFormData,\n                [name] : type === 'checkbox' ? checked : value\n            }\n        })\n    }\n\n    const onSubmit = (e:any) => {\n        e.preventDefault();\n        if(user.phone === '123456' && user.pin === '1000') {\n            setToken(\"this is a test token\");\n            if (locationState) {\n                // state is any by default\n                const { redirectTo } = locationState as RedirectLocationState;\n                navigate(`${redirectTo.pathname}${redirectTo.search}`);\n            } else {\n                navigate(\"/\", { replace: true });\n            }\n            \n        } else {\n            console.log('Invalid Credentials');\n        }\n    }\n\n    return (\n        <>\n            <h4 className=\"text-slate-300 font-light my-4\">Login</h4>\n            {JSON.stringify(user)}\n            <form onSubmit={ (e) => onSubmit(e) } className='text-left'>\n                <div className=\"mb-5\">\n                    <label htmlFor=\"phone\" className='block'>Phone Number:</label>\n                    <input id=\"inputEmail\" type=\"text\" placeholder=\"0722-123-456\" name=\"phone\" className=\"form-control\" value={ user.phone } onChange={ (event) => onChange(event) } />\n                </div>\n\n                <div className=\"mb-5\">\n                    <label htmlFor=\"password\" className='block'>Password:</label>\n                    <input id=\"inputPassword\" type=\"password\" placeholder=\"Password\" name=\"pin\" className=\"form-control\" value={ user.pin } onChange={ (event) => onChange(event) } />\n                </div>\n                <div className=\"mb-5 flex gap-4\">\n                    <input id=\"remember\" type=\"checkbox\" className='inline'  name=\"remember\" checked={user.remember} onChange={ (event) => onChange(event) } />\n                    <label htmlFor=\"remember\" className='block'>Remember Me</label>\n                </div>\n\n                <div className=\"mb-5 flex\">\n                    <div className=\"flex gap-2 cursor-pointer\">\n                        <input id=\"male\" type=\"radio\" className='inline'  name=\"gender\" value='male' checked={user.gender === 'male'} onChange={ (event) => onChange(event) } />\n                        <label htmlFor=\"male\" className='block'>Male</label>\n                    </div>\n                    <div className=\"flex gap-2 ml-5 cursor-pointer\">\n                        <input id=\"female\" type=\"radio\" className='inline'  name=\"gender\" value='female' checked={user.gender === 'female'} onChange={ (event) => onChange(event) } />\n                        <label htmlFor=\"female\" className='block'>Female</label>\n                    </div>\n                </div>\n                \n                <div className=\"my-6\">\n                    <button type=\"submit\" className=\"btn mb-2\">Submit</button>\n                </div>\n            </form>\n            <div className=\"text-right\">\n                <NavLink to=\"/forgot-password\" className=\"hover:text-yellow\">Forgot Password?</NavLink>\n            </div>\n        </>\n    )\n}\n"],"names":["Login","navigate","useNavigate","setToken","useAuth","state","locationState","useLocation","user","setUser","useState","phone","pin","remember","gender","onChange","event","name","value","type","checked","target","prevFormData","_jsxs","_Fragment","children","_jsx","className","JSON","stringify","onSubmit","e","preventDefault","redirectTo","concat","pathname","search","replace","console","log","htmlFor","id","placeholder","NavLink","to"],"sourceRoot":""}