{"version":3,"file":"static/js/612.f8e56d0d.chunk.js","mappings":"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","sources":["pages/public/WorkerTest.tsx"],"sourcesContent":["import { Fibs } from \"models/model\";\nimport { useMyState } from \"hooks\";\nimport { useAppDispatch } from \"redux/hooks\";\nimport { setError, updateFibo, setNumber, setFibo } from \"redux/modules/auth/authSlice\";\nimport { ordinal_suffix } from \"utils/utils\";\nimport { useState } from \"react\";\n\nconst FetchUsers = () => {\n\n    const [alert,setAlert] = useState<string>('info')\n    const { err,num,computedFibs } = useMyState();\n    const dispatch = useAppDispatch();\n\n    const [num1,setNum1] = useState<number>(0);\n    const [num2,setNum2] = useState<number>(0);\n    const [num3,setNum3] = useState<string>('');\n\n    const myWorker = new SharedWorker(\"workers/app.workers.js\");\n\n    \n\n    const square = () => {\n        \n        myWorker.port.postMessage({num1, num2:num1});\n        console.log(\"Message posted to worker\");\n\n        myWorker.port.onmessageerror = (e) => {\n            console.log(e);\n            \n        }\n\n        myWorker.port.onmessage = (e) => {\n            setNum3(e.data);\n            console.log(\"Message received from worker\");\n        };\n    }\n\n    const multiply = () => {\n        myWorker.port.postMessage([num1, num2]);\n        console.log(\"Message posted to worker\");\n\n        myWorker.port.onmessage = (e) => {\n            setNum3(e.data);\n            console.log(\"Message received from worker\");\n        };\n    }\n\n    const runWorker = (num: number, id:number) => {\n        dispatch(setError(''));\n        const worker = new Worker(new URL(\"workers/fib.workers.ts\", import.meta.url))\n        \n        \n        worker.postMessage({ num });\n        worker.onerror = (err) => err;\n        worker.onmessage = (e) => {\n            const { time, fibNum } = e.data;\n            dispatch(\n                updateFibo({ id,time,fibNum,loading:false})\n            );\n            setAlert('success');\n            worker.terminate();\n        };\n    };\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"offset-md-2 col-md-3 my-3 py-3\">\n                    {/* -------------------------------------- */}\n                    <h4>Fibonacci Number</h4>\n                    { err ? <div className=\"alert alert-warning\">{ err }</div> : ''}\n                    <br />\n                    <input type=\"text\" className=\"form-control\" value={num} onChange={(e) => dispatch( setNumber(window.Number(e.target.value) )) } />\n                    <button className=\"btn btn-info mt-4\" onClick={() => {\n                        if (num < 2) {\n                            dispatch( setError('Please enter a number greater than 2'));\n                            return;\n                        }\n                        const id = computedFibs.length;\n                        dispatch( setFibo({id,loading:true,nth: ordinal_suffix(num),time:0,fibNum:0}));\n                        runWorker(num, id);\n\n                    }}>Calculate Fibonacci</button>\n                    <button className=\"btn btn-primary mt-4 ml-2\" onClick={ () => setAlert('danger')}>Change Alert</button>\n\n                    <br />\n                    <Results results={computedFibs} alert={alert} />\n                </div>\n\n                {/* -------------------------------------- */}\n                <div className=\"col-md-3 my-3 py-3\">\n                    <h4>Shared Workers</h4>\n                    <br />\n                    <input type=\"text\" className=\"form-control mb-2\" value={num1} onChange={(e) => setNum1(window.Number(e.target.value) ) } />\n                    <input type=\"text\" className=\"form-control mb-3\" value={num2} onChange={(e) => setNum2(window.Number(e.target.value) ) } />\n                   \n                    <div className=\"py-2\">\n                        <button className=\"btn btn-info mr-2\" onClick={ ()=> square() }>Square</button>\n                        <button className=\"btn btn-info\" onClick={ ()=> multiply() }>Multiply</button>\n                    </div>\n                    <p>Result { num3 }</p>\n                </div>\n                \n            </div>\n            \n        </>\n    ) \n}\n\nexport default FetchUsers;\n\ntype Props = { results: Fibs[],alert:string }\nconst Results = ({ results,alert} : Props) => { \n    const seconds = (ms?:number):number => (ms) ? Math.floor((ms/1000) % 60) : 0;\n    return (\n        <>\n        {\n            results.map((fb) => {\n                const { id, nth, time, fibNum, loading } = fb;\n                \n                return <div  key={id} className={`alert alert-${alert} my-2`}>\n                    { loading ? (\n                        <p className=\"font-bold\" style={{ marginBottom: 0}}>Calculating the{\" \"}\n                        <span className=\"bold\" id=\"nth\">\n                          { nth }\n                        </span>{\" \"}\n                        Fibonacci number...</p>\n                    ) : (\n                        <>\n                            <p className=\"font-semi-bold\" style={{ marginBottom: 0}}>\n                                Time: <span className=\"bold\">{ seconds(time)} second(s)</span>\n                            \n                                <span className=\"font-bold mx-1\" id=\"nth\">\n                                    - {nth}\n                                </span>\n                                Fibonacci number:\n                                <span className=\"font-bold\" id=\"sum\">\n                                    {fibNum}\n                                </span>\n                            </p>\n                        </>\n                    )}\n                </div>\n            })\n        }\n    </>\n    )\n}"],"names":["FetchUsers","alert","setAlert","useState","err","num","computedFibs","useMyState","dispatch","useAppDispatch","num1","setNum1","num2","setNum2","num3","setNum3","myWorker","SharedWorker","_jsx","_Fragment","children","_jsxs","className","type","value","onChange","e","setNumber","window","Number","target","onClick","setError","id","length","setFibo","loading","nth","ordinal_suffix","time","fibNum","runWorker","worker","Worker","URL","postMessage","onerror","onmessage","data","updateFibo","terminate","Results","results","port","console","log","onmessageerror","_ref","map","fb","concat","style","marginBottom","ms","Math","floor"],"sourceRoot":""}