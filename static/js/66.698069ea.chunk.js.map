{"version":3,"file":"static/js/66.698069ea.chunk.js","mappings":"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","sources":["components/partials/jackpot/main.tsx","components/partials/jackpot/market.tsx","pages/public/Jackpot.tsx","../node_modules/react-country-flag/src/index.tsx"],"sourcesContent":["import { Match } from \"models/model\"\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport ReactCountryFlag from \"react-country-flag\";\nimport { useAddBetslip,useMyState } from 'hooks';\n\ntype Props = { match: Match }\n\nexport default function Main({ match}: Props) {\n    \n    const { flags,jackpot }  = useMyState()\n    const { addMatch } = useAddBetslip();\n\n    const filterMatch = () => {\n        return match.markets.find( el => el.marketId === '2') || null\n    }\n    \n    return (\n        <div className=\"dashed-border px-2 py-2 md:px-0 flex items-center font-normal\">\n            <div className=\"flex flex-col w-1/2\">\n                <div>\n                    <span className='text-xs font-light text-light-blue'>\n                        <ReactCountryFlag countryCode={ flags[match.country]} svg className=\"mr-2 mb-1\"/>\n                        <Moment format='hh:ss â€¢ DD/MM'>{ moment(`${match.scheduled}`) }</Moment>\n                    </span>\n                </div>\n                <span>{ match.home }</span>\n                <span>{ match.away }</span>\n            </div>\n            <div className=\"w-1/2\">\n                <div className={`markets-header jackpot`}>\n                    <div className=\"grid grid-cols-3 gap-3 text-center\">\n                    {\n                        filterMatch()!.odds.map( (elem : any) => {  \n                            return  <span key={elem.id.toString()} className={`py-2.5 rounded-md  ${ jackpot.findIndex(g => g.oddId === elem!.id.toString()) > -1 ? ' bg-yellow text-dark-bg' : 'bg-dark-op text-light-blue'}`} onClick={ () => addMatch(match,filterMatch()!.name,elem.name,elem.odds,elem.id.toString(),'jackpot')}>{ elem.odds.toFixed(2) }</span>\n                        })\n                    }\n                    </div>\n                </div>\n            </div>\n        </div>  \n    )\n}\n","import { Sport } from \"models/model\"\n\ntype Props = { sport: Sport }\n\nexport default function Market({ sport } : Props) {\n  return (\n    <div className=\"flex items-center dashed-border py-2  mt-1 px-2 md:px-0\">\n        <div className=\"w-1/2\">\n            <span className=\"font-normal\">{ sport.name }</span>\n        </div>\n        <div className=\"w-1/2 text-center\">\n            {\n                sport.markets.map( el =>  {\n\n                    if(el.id === 2) {\n                        return <div key={el.id.toString()}  className=\"flex flex-col\">\n                            <p>{el.name}</p>\n                            <div className=\"grid grid-cols-3 gap-3 mt-1\">\n                                {\n                                    el.selections.map( elem => \n                                        <span key={elem.id.toString()} className=\"\">{ elem.name }</span>\n                                    )\n                                }\n                            </div>\n                        </div>\n                    } else {\n                        return '';\n                    }\n                    \n                })\n            }\n        </div>\n    </div>\n  )\n}","import { useEffect } from \"react\";\nimport BetslipSection from \"components/partials/betslip\";\nimport Main from \"components/partials/jackpot/main\";\nimport Market from \"components/partials/jackpot/market\";\nimport Sidebar from \"components/partials/sidebar\";\nimport { Sport } from \"models/model\";\nimport { useAppDispatch } from \"redux/hooks\";\nimport { addBetslipType, setupJackpotGames } from \"redux/modules/feeds/gamesSlice\";\nimport { getJackpot } from \"services/api\";\nimport { useAddBetslip,useMyState } from 'hooks';\n\n\nexport default function Jackpot() {\n\n    const dispatch = useAppDispatch();\n\n    const { jackpotMatches:feeds, sportsMarkets } = useMyState();\n    const { autoSelectMatch } = useAddBetslip();\n    const sport = sportsMarkets.find( el => el.id === 10 ) as Sport;\n\n    dispatch( addBetslipType('Jackpot'));\n\n    const autoSelect = () => {\n        feeds.forEach( (el) => {\n            let ind = Math.floor(Math.random() * 3) + 1;\n            const market = el.markets.find( el => el.marketId === '2');\n            \n            if( market ) {\n                market.odds.forEach( arg => {\n                    if( arg.outcomeId === ind ) {\n                        autoSelectMatch( el,market.name,arg.name,arg.odds,arg.id.toString(),'jackpot' );\n                    }\n                });\n            }\n        });\n    }\n\n    useEffect( () =>  {\n        getJackpot().then( res => dispatch( setupJackpotGames(res))).catch( err => console.log('Error--',err) );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    \n    return (\n        <div className=\"md:flex  gap-3 md:p-2\">\n            <div className=\"md:flex gap-2 lg:w-3/4 sm:w-full md:full\">\n                \n                {/* ---Sidebar--- */}\n                <div className=\"sidebar hidden lg:block lg:w-48\">\n                    <Sidebar />\n                </div>\n\n                {/* ---Main--- */}\n                <div className=\"main-home mb-5 lg:w-fit sm:w-full md:w-full\">\n\n                    {/* ---Carousel--- */}\n                    <img src={ process.env.PUBLIC_URL + \"/images/image3.png\"} alt=\"Home\" className=\"w-full md:rounded-md\"/>\n                    \n                    {/* Auto Select */}\n                    <div className=\"md:py-2.5 text-right p-2 md:px-0 dashed-border \">\n                        <button className=\"px-8 py-2 bg-yellow font-medium text-dark-bg rounded-md\" onClick={ autoSelect }>Auto Select</button>\n                    </div>\n\n                    \n                    {/* ---Markets--- */}\n                    {  typeof sport === 'object' &&  <Market sport={sport}/> }\n\n                    {/* ---Matches--- */}\n                    { feeds.length > 0 && typeof sport === 'object' && feeds.map( x => <Main key={ x.id.toString() }  match={x} />) }\n                    \n                </div>\n            </div>\n\n            {/* ---Betslip--- */}\n            <div className=\"betslip hidden lg:block\">\n                <BetslipSection type='Jackpot'/>\n            </div>\n        </div>\n    )\n}\n","import * as React from 'react';\n\nconst DEFAULT_CDN_URL =\n  'https://cdn.jsdelivr.net/gh/lipis/flag-icons/flags/4x3/';\nconst DEFAULT_CDN_SUFFIX = 'svg';\n\n// offset between uppercase ascii and regional indicator symbols\nconst OFFSET = 127397;\n\ninterface EmojiProps extends React.HTMLAttributes<HTMLSpanElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: false;\n}\n\ninterface ImgProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: true;\n}\n\nexport type ReactCountryFlagProps = EmojiProps | ImgProps;\n\nexport const ReactCountryFlag = ({\n  cdnSuffix = DEFAULT_CDN_SUFFIX,\n  cdnUrl = DEFAULT_CDN_URL,\n  countryCode,\n  style,\n  svg = false,\n  ...props\n}: ReactCountryFlagProps) => {\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n\n  if (svg) {\n    const flagUrl = `${cdnUrl}${countryCode.toLowerCase()}.${cdnSuffix}`;\n\n    return (\n      <img\n        {...props}\n        src={flagUrl}\n        style={{\n          display: 'inline-block',\n          width: '1em',\n          height: '1em',\n          verticalAlign: 'middle',\n          ...style,\n        }}\n      />\n    );\n  }\n\n  const emoji = countryCode\n    .toUpperCase()\n    .replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + OFFSET));\n\n  return (\n    <span\n      role=\"img\"\n      {...props}\n      style={{\n        display: 'inline-block',\n        fontSize: '1em',\n        lineHeight: '1em',\n        verticalAlign: 'middle',\n        ...style,\n      }}\n    >\n      {emoji}\n    </span>\n  );\n};\n\nexport default ReactCountryFlag;\n"],"names":["Main","_ref","match","flags","jackpot","useMyState","addMatch","useAddBetslip","filterMatch","markets","find","el","marketId","_jsxs","className","children","_jsx","ReactCountryFlag","countryCode","country","svg","Moment","format","moment","concat","scheduled","home","away","odds","map","elem","findIndex","g","oddId","id","toString","onClick","name","toFixed","Market","sport","selections","Jackpot","dispatch","useAppDispatch","jackpotMatches","feeds","sportsMarkets","autoSelectMatch","addBetslipType","useEffect","getJackpot","then","res","setupJackpotGames","catch","err","console","log","Sidebar","src","process","alt","autoSelect","forEach","ind","Math","floor","random","market","arg","outcomeId","length","x","BetslipSection","type","cdnSuffix","_ref$cdnSuffix","_ref$cdnUrl","cdnUrl","style","_ref$svg","props","_objectWithoutPropertiesLoose","_excluded","flagUrl","toLowerCase","createElement","Object","assign","_extends","display","width","height","verticalAlign","emoji","toUpperCase","replace","_char","String","fromCodePoint","charCodeAt","role","fontSize","lineHeight"],"sourceRoot":""}