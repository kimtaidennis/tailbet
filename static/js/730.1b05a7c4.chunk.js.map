{"version":3,"file":"static/js/730.1b05a7c4.chunk.js","mappings":"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","sources":["components/partials/betslip/match.tsx","components/partials/betslip.tsx","pages/public/Betslip.tsx"],"sourcesContent":["import Moment from 'react-moment';\nimport moment from 'moment';\nimport { Betslip } from 'models/model';\n\ntype Props = { match: Betslip; deleteBetslip: any };\n\nexport default function Match( { match, deleteBetslip }: Props ) {\n  return (\n    <div className='py-2 dashed-border' key={`${match.id.toString()}`}>\n        <div className=\"match-info flex justify-between \">\n            <p className='font-semi-bold'>{`${match.home} vs ${match.away}`}</p>\n            <span className='text-yellow' onClick={ () => deleteBetslip(match.id) }>\n              <i className=\"icofont-close-squared-alt\"></i>\n            </span>\n        </div>\n\n        { match.type === 'pre-match' && <p className=''>{` ${match.market} • ${match.selected}`}</p> }\n        \n        { match.type === 'jackpot' && <p className=''>Pick • {` ${match.selected}`}</p> }\n\n        { \n          match.type === 'pre-match' && <div className='text-light-blue text-xs flex justify-between'>\n                <span className='time'>Starts <Moment format='hh:ss • DD/MM'>{ moment(`${match.schedule}`) }</Moment></span>\n                <span>{ match.odd.toFixed(2) }</span> \n            </div>\n        }\n    </div>\n  )\n}\n","import { useAppDispatch } from 'redux/hooks'\nimport { clearBetslip, clearJackpotSlip, deleteBetslip, deleteJackpotSlip } from 'redux/modules/feeds/gamesSlice';\nimport Match from './betslip/match';\nimport { useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAddBetslip, useMyState } from 'hooks';\nimport { useAuth } from 'auth/AuthProvider';\n\ntype Props = { type: String }\n\nexport default function BetslipSection({ type } : Props) {\n\n    const [amount,setAmount] = useState(100);\n    const { betslip, jackpot } = useMyState();\n    const { token } = useAuth();\n    const { possibleWin } = useAddBetslip()\n    \n    const dispatch = useAppDispatch();\n    const navigate = useNavigate();\n    \n    const login = () => {\n        navigate('/login');\n    }\n\n    const whichType = () => {\n        if(type === 'Jackpot') {\n            return jackpot.length > 0 ? `(${jackpot.length})` : '';\n        } else {\n            return betslip.length > 0 ? `(${betslip.length})` : ''; //clearJackpotSlip\n        }\n    }\n\n    const totalOdds = useMemo( () => betslip.reduce( (a,v) => a * v.odd,1), [betslip])\n\n    return (\n        <>\n            <div className=\"py-2  dashed-border flex justify-between items-center font-normal lg:max-w-[350px] lg:min-w-[350px]\">\n                <p>Betslip  { whichType() } </p>\n                {  betslip.length > 0  && type === 'Pre-Match' && <p className='clear' onClick={ () => dispatch( clearBetslip() ) }>Clear </p> }\n                {  jackpot.length > 0  && type === 'Jackpot' && <p className='clear' onClick={ () => dispatch( clearJackpotSlip() ) }>Clear </p> }\n            </div>\n\n            {/* Prematch & Live Betslip */}\n            {  betslip.length > 0 && type === 'Pre-Match' && <>\n                    <div className=\"\">\n                        {\n                            betslip.map( x => <Match match={x}  deleteBetslip={ () => dispatch(deleteBetslip(x.id))} key={x.oddId.toString()} />)\n                        }\n                    </div>\n\n                    <br />\n                    <div className=\"py-2\">\n                        <div className=\"flex justify-between py-1.5\">\n                            <p>Total Odds</p>\n                            <p>{ totalOdds.toFixed(2) }</p>\n                        </div>\n                        <div className=\"flex justify-between py-1.5\">\n                            <p>Possible Win</p>\n                            <p>{ possibleWin(amount,totalOdds).toLocaleString() }</p>\n                        </div>\n                        <div className=\"py-1.5\">\n                            <input type=\"number\" className=\"form-control\" value={amount} onChange={ (e) => setAmount(parseInt(e.target.value)) }/>\n                        </div>\n                        <div className=\"flex justify-between gap-3 mt-3\">\n                            {\n                                token ? <button className='p-2.5 bg-yellow text-dark-bg rounded-md'>place bet</button> : <button className='p-2.5 bg-yellow text-dark-bg w-1/2 rounded-md' onClick={ login }>login</button>\n                            }\n                            \n                            <button className='p-2.5 bg-red-400 w-1/2 rounded-md'>share bet</button>\n                        </div>\n                    </div>\n                </>\n            }\n\n            {/* Jackpot Betslip */}\n            {  jackpot.length > 0 && type === 'Jackpot' && <>\n                    <div className=\"mt-3\">\n                        {\n                            jackpot.map( x => <Match match={x}  deleteBetslip={ () => dispatch(deleteJackpotSlip(x.id))} key={x.oddId.toString()} />)\n                        }\n                    </div>\n\n                    <br />\n                    <div className=\"show-odds-info\">\n                        <div className=\"form-group\">\n                            <input type=\"number\" className=\"form-control\" value={amount} onChange={ (e) => setAmount(parseInt(e.target.value)) }/>\n                        </div>\n                        <div className=\"betslip-buttons\">\n                            {\n                                token ? <button className='p-2.5 bg-yellow text-dark-bg w-1/2 rounded-md'>place bet</button> : <button className='p-2.5 bg-yellow text-dark-bg w-1/2 rounded-md' onClick={ login }>login</button>\n                            }\n                            <button className='p-2.5 bg-red-400 w-1/2 rounded-md'>share bet</button>\n                        </div>\n                    </div>\n                </>\n            }\n\n            {/* Empty Prematch Betslip */}\n            {\n                betslip.length === 0 && type === 'Pre-Match' && <div className='bg-dark-op p-12 rounded-lg my-4'>\n                    <p className='font-semi-bold'>You have not selected any bet</p>\n                    <span className=''>Make your first pick to start playing.</span>\n                </div>\n            }\n\n            {/* Empty Jackpot Betslip */}\n            {\n                jackpot.length === 0 && type === 'Jackpot' && <div className='bg-dark-op p-12 rounded-lg my-4'>\n                    <p className='font-semi-bold'>You have not selected any jackpot bet</p>\n                    <span className=''>Make your first pick to start playing.</span>\n                </div>\n            }\n          \n        </>\n    )\n}\n","import BetslipSection from 'components/partials/betslip';\nimport { useMyState } from 'hooks';\n\nexport default function Betslip() {\n\n  const { type } = useMyState()\n\n  return (\n    <div className=\"betslip px-2 py-2 h-screen\">\n      <BetslipSection type={ type }/>\n    </div>\n  )\n}\n"],"names":["Match","_ref","match","deleteBetslip","_jsxs","className","children","_jsx","concat","home","away","onClick","id","type","market","selected","Moment","format","moment","schedule","odd","toFixed","toString","BetslipSection","amount","setAmount","useState","betslip","jackpot","useMyState","token","useAuth","possibleWin","useAddBetslip","dispatch","useAppDispatch","navigate","useNavigate","login","totalOdds","useMemo","reduce","a","v","_Fragment","length","clearBetslip","clearJackpotSlip","map","x","oddId","toLocaleString","value","onChange","e","parseInt","target","deleteJackpotSlip","Betslip"],"sourceRoot":""}